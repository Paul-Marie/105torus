#!/usr/bin/python2.7

import sys
import math
import os
import random

if (len(sys.argv) != 8):
    exit (84)

#######################################################

def     bisection(a0, a1, a2, a3, a4, n, x1, x2):
    xm = (float(x1) + float(x2)) / 2
    while (abs(float(((a4 * xm ** 4) + (a3 * xm ** 3) + (a2 * xm ** 2) + (a1 * xm ** 1) + (a0 * xm ** 0)))) >= 10 ** -n):
        xm = (float(x1) + float(x2)) / 2
        if (((a4 * x1 ** 4) + (a3 * x1 ** 3) + (a2 * x1 ** 2) + (a1 * x1 ** 1) + (a0 * x1 ** 0)) * ((a4 * xm ** 4) + (a3 * xm ** 3) + (a2 * xm ** 2) + (a1 * xm ** 1) + (a0 * xm ** 0)) < 0):
            x2 = xm
            if (float(str("%." + str(n) + "f") % (x2)) == x2):
                print "x =", x2
            else:
                print str("x = " + str("%." + str(n) + "f") % (x2))
        else:
            x1 = float(xm)
            if (float(str("%." + str(n) + "f") % (x1)) == x1):
                print "x =", x1
            else:
                print str("x = " + str("%." + str(n) + "f") % (x1))

#######################################################

def     newton(a0, a1, a2, a3, a4, n):
    xm = 0.5
    if (float(str("%." + str(n) + "f") % (xm)) == xm):
        print "x =", xm
    else:
        print str("x = " + str("%." + str(n) + "f") % xm)
    xm = xm - ((((a4 * xm ** 4) + (a3 * xm ** 3) + (a2 * xm ** 2) + (a1 * xm ** 1) + (a0 * xm ** 0))) / (((4 * a4 * xm ** 3) + (3 * a3 * xm ** 2) + (2 * a2 * xm ** 1) + (1 * a1 * xm ** 0))))
    while (abs(float(((a4 * xm ** 4) + (a3 * xm ** 3) + (a2 * xm ** 2) + (a1 * xm ** 1) + (a0 * xm ** 0)))) >= 10 ** -n):
        print str("x = " + str("%." + str(n) + "f") % (xm))
        xm = xm - ((((a4 * xm ** 4) + (a3 * xm ** 3) + (a2 * xm ** 2) + (a1 * xm ** 1) + (a0 * xm ** 0))) / (((4 * a4 * xm ** 3) + (3 * a3 * xm ** 2) + (2 * a2 * xm ** 1) + (1 * a1 * xm ** 0))))
    print str("x = " + str("%." + str(n) + "f") % (xm))

#######################################################

def     secant(a0, a1, a2, a3, a4, n, x1, x2):
    top_divide = ((a4 * x2 ** 4) + (a3 * x2 ** 3) + (a2 * x2 ** 2) + (a1 * x2 ** 1) + (a0 * x2 ** 0))
    bot_divide = ((a4 * x2 ** 4) + (a3 * x2 ** 3) + (a2 * x2 ** 2) + (a1 * x2 ** 1) + (a0 * x2 ** 0)) - ((a4 * x1 ** 4) + (a3 * x1 ** 3) + (a2 * x1 ** 2) + (a1 * x1 ** 1) + (a0 * x1 ** 0))
    xm = x2 - (top_divide / bot_divide)
    x1 = x2
    x2 = xm
    if (float(str("%." + str(n) + "f") % (xm)) == xm):
        print "x =", x2
    else:
        print str("x = " + str("%." + str(n) + "f") % xm)
    while (abs(float((a4 * xm ** 4) + (a3 * xm ** 3) + (a2 * xm ** 2) + (a1 * xm ** 1) + (a0 * xm ** 0))) >= 10 ** -n):
        top_divide = ((a4 * x2 ** 4) + (a3 * x2 ** 3) + (a2 * x2 ** 2) + (a1 * x2 ** 1) + (a0 * x2 ** 0)) * (x2 - x1)
        bot_divide = ((a4 * x2 ** 4) + (a3 * x2 ** 3) + (a2 * x2 ** 2) + (a1 * x2 ** 1) + (a0 * x2 ** 0)) - ((a4 * x1 ** 4) + (a3 * x1 ** 3) + (a2 * x1 ** 2) + (a1 * x1 ** 1) + (a0 * x1 ** 0))
        xm = x2 - (top_divide / bot_divide)
        x1 = x2
        x2 = xm
        if (float(str("%." + str(n) + "f") % (xm)) == xm):
            print "x =", x2
        else:
            print str("x = " + str("%." + str(n) + "f") % xm)

#######################################################

def     inter(str_av):
    if (str_av[0] == '-'):
        i = 1
    else:
        i = 0
    while (i < len(str_av)):
        if (str_av[i] < '0' or str_av[i] > '9'):
            exit(84)
        i = i + 1

#######################################################

a0 = int(sys.argv[2])
a1 = int(sys.argv[3])
a2 = int(sys.argv[4])
a3 = int(sys.argv[5])
a4 = int(sys.argv[6])
n = int(sys.argv[7])
x1 = 0.0000
x2 = 1.0000
i = 1

while (i < 8):
    inter(sys.argv[i])
    i = i + 1
if (sys.argv[1] == '1'):
    bisection(a0, a1, a2, a3, a4, n, x1, x2)
elif (sys.argv[1] == '2'):
    newton(a0, a1, a2, a3, a4, n)
elif (sys.argv[1] == '3'):
    secant(a0, a1, a2, a3, a4, n, x1, x2)
else:
    exit(84)
